{
  "metadata": {
    "created": "2025-01-09",
    "totalTasks": 48,
    "estimatedHours": 14.5,
    "phases": ["Phase 1", "Phase 2", "Phase 3", "Phase 4"]
  },
  "tasks": [
    {
      "id": "REF-001",
      "title": "Remove DEMO_MODE flag and conditional code from extension.ts",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 15,
      "filesAffected": ["src/extension.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Remove DEMO_MODE constant and all conditional blocks that check it",
      "successMetric": "All DEMO_MODE references removed, extension compiles",
      "rollbackStrategy": "git checkout HEAD -- src/extension.ts"
    },
    {
      "id": "REF-002",
      "title": "Remove debugPathConstruction function from extension.ts",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 15,
      "filesAffected": ["src/extension.ts"],
      "dependencies": ["REF-001"],
      "riskLevel": "LOW",
      "description": "Remove the debugPathConstruction function and its invocation",
      "successMetric": "Function removed, extension still activates properly",
      "rollbackStrategy": "git checkout HEAD -- src/extension.ts"
    },
    {
      "id": "REF-003",
      "title": "Extract data fetching logic from TaskWebviewProvider",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/services/TasksDataService.ts"],
      "dependencies": [],
      "riskLevel": "MEDIUM",
      "description": "Move all data fetching methods to TasksDataService",
      "successMetric": "TaskWebviewProvider uses only TasksDataService for data",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts src/services/TasksDataService.ts"
    },
    {
      "id": "REF-004",
      "title": "Consolidate to JSON-only task parser",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/services/JSONTaskParser.ts", "src/services/MarkdownTaskParser.ts", "src/services/TasksDataService.ts"],
      "dependencies": [],
      "riskLevel": "MEDIUM",
      "description": "Remove MarkdownTaskParser, use only JSONTaskParser",
      "successMetric": "Only JSON parsing works, Markdown parser deleted",
      "rollbackStrategy": "git checkout HEAD -- src/services/"
    },
    {
      "id": "REF-005",
      "title": "Extract HTML generation from TaskWebviewProvider to separate class",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskHTMLGenerator.ts"],
      "dependencies": ["REF-003"],
      "riskLevel": "MEDIUM",
      "description": "Create TaskHTMLGenerator class to handle all HTML generation",
      "successMetric": "HTML generation isolated in new class",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskHTMLGenerator.ts"
    },
    {
      "id": "REF-006",
      "title": "Remove demo models directory",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/models/Analytics.ts", "src/models/Payment.ts", "src/models/User.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Delete entire src/models directory with demo models",
      "successMetric": "Models directory removed, no build errors",
      "rollbackStrategy": "git checkout HEAD -- src/models/"
    },
    {
      "id": "REF-007",
      "title": "Remove ML inference service",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/ml/InferenceService.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Delete entire src/ml directory with InferenceService",
      "successMetric": "ML directory removed, no build errors",
      "rollbackStrategy": "git checkout HEAD -- src/ml/"
    },
    {
      "id": "REF-008",
      "title": "Extract message handling from TaskWebviewProvider",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskMessageHandler.ts"],
      "dependencies": ["REF-005"],
      "riskLevel": "MEDIUM",
      "description": "Create TaskMessageHandler to handle all webview messages",
      "successMetric": "Message handling isolated in separate class",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskMessageHandler.ts"
    },
    {
      "id": "REF-009",
      "title": "Remove health check logic from ProcessManager",
      "phase": "Phase 2",
      "priority": "P0",
      "estimatedMinutes": 15,
      "filesAffected": ["src/server/ProcessManager.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Remove healthCheckInterval and related health monitoring code",
      "successMetric": "Health check code removed, server still starts",
      "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts"
    },
    {
      "id": "REF-010",
      "title": "Remove restart/retry logic from ProcessManager",
      "phase": "Phase 2",
      "priority": "P0",
      "estimatedMinutes": 15,
      "filesAffected": ["src/server/ProcessManager.ts"],
      "dependencies": ["REF-009"],
      "riskLevel": "LOW",
      "description": "Remove restartCount, restartTimer, exponential backoff logic",
      "successMetric": "Restart logic removed, simple start/stop remains",
      "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts"
    },
    {
      "id": "REF-011",
      "title": "Simplify ProcessManager to direct server control",
      "phase": "Phase 2",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/server/ProcessManager.ts"],
      "dependencies": ["REF-010"],
      "riskLevel": "MEDIUM",
      "description": "Reduce ProcessManager to simple start/stop/getStatus methods",
      "successMetric": "ProcessManager under 100 lines, basic functionality works",
      "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts"
    },
    {
      "id": "REF-012",
      "title": "Extract state management from TaskWebviewProvider",
      "phase": "Phase 2",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskViewState.ts"],
      "dependencies": ["REF-008"],
      "riskLevel": "MEDIUM",
      "description": "Create TaskViewState class to manage webview state",
      "successMetric": "State management isolated, accordion behavior preserved",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskViewState.ts"
    },
    {
      "id": "REF-013",
      "title": "Remove DegradedModeManager completely",
      "phase": "Phase 3",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/utils/DegradedModeManager.ts", "src/extension.ts"],
      "dependencies": [],
      "riskLevel": "MEDIUM",
      "description": "Delete DegradedModeManager and all references to it",
      "successMetric": "DegradedModeManager removed, extension still works",
      "rollbackStrategy": "git checkout HEAD -- src/utils/DegradedModeManager.ts src/extension.ts"
    },
    {
      "id": "REF-014",
      "title": "Remove AuditLogger functionality",
      "phase": "Phase 3",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/security/AuditLogger.ts", "src/extension.ts"],
      "dependencies": [],
      "riskLevel": "MEDIUM",
      "description": "Delete AuditLogger and all audit logging calls",
      "successMetric": "AuditLogger removed, no audit log references remain",
      "rollbackStrategy": "git checkout HEAD -- src/security/AuditLogger.ts src/extension.ts"
    },
    {
      "id": "REF-015",
      "title": "Simplify ErrorHandler to basic error logging",
      "phase": "Phase 3",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/ErrorHandler.ts"],
      "dependencies": ["REF-013"],
      "riskLevel": "LOW",
      "description": "Reduce ErrorHandler to simple try-catch wrapper with console logging",
      "successMetric": "ErrorHandler under 50 lines, basic error handling works",
      "rollbackStrategy": "git checkout HEAD -- src/utils/ErrorHandler.ts"
    },
    {
      "id": "REF-016",
      "title": "Extract CSS styles from TaskWebviewProvider",
      "phase": "Phase 3",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/styles.css"],
      "dependencies": ["REF-012"],
      "riskLevel": "LOW",
      "description": "Move all inline CSS to external stylesheet",
      "successMetric": "CSS in separate file, styles still apply correctly",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/"
    },
    {
      "id": "REF-017",
      "title": "Fix git diff URI construction issue",
      "phase": "Phase 1",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/extension.ts"],
      "dependencies": ["REF-008"],
      "riskLevel": "HIGH",
      "description": "Fix URI construction for git diff functionality",
      "successMetric": "Git diff command works when clicking on task files",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts src/extension.ts"
    },
    {
      "id": "REF-018",
      "title": "Remove TimeFormattingUtility",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/TimeFormattingUtility.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Remove TimeFormattingUtility or inline its functions where needed",
      "successMetric": "Utility removed or simplified to essential functions only",
      "rollbackStrategy": "git checkout HEAD -- src/utils/TimeFormattingUtility.ts"
    },
    {
      "id": "REF-019",
      "title": "Remove manifestValidator utility",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/manifestValidator.ts", "scripts/validate-manifest.js"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Remove manifestValidator or move to build scripts only",
      "successMetric": "Validator removed from runtime code",
      "rollbackStrategy": "git checkout HEAD -- src/utils/manifestValidator.ts"
    },
    {
      "id": "REF-020",
      "title": "Consolidate task types into single file",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/types/taskInterfaces.ts", "src/tasks/types/taskTypes.ts", "src/tasks/types/taskJsonRpc.ts"],
      "dependencies": ["REF-004"],
      "riskLevel": "MEDIUM",
      "description": "Merge all task type definitions into single taskTypes.ts",
      "successMetric": "Single source of truth for task types",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/types/"
    },
    {
      "id": "REF-021",
      "title": "Remove excessive command registrations",
      "phase": "Phase 2",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/extension.ts", "package.json"],
      "dependencies": ["REF-002"],
      "riskLevel": "MEDIUM",
      "description": "Keep only essential commands: showTasks, refreshTasks, openDiff",
      "successMetric": "Command count reduced by 70%, core functions work",
      "rollbackStrategy": "git checkout HEAD -- src/extension.ts package.json"
    },
    {
      "id": "REF-022",
      "title": "Simplify configuration settings",
      "phase": "Phase 2",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["package.json", "src/config/extensionConfig.ts"],
      "dependencies": ["REF-021"],
      "riskLevel": "LOW",
      "description": "Remove non-essential configuration options",
      "successMetric": "Config reduced to taskFile path and server port only",
      "rollbackStrategy": "git checkout HEAD -- package.json src/config/"
    },
    {
      "id": "REF-023",
      "title": "Create thin TaskWebviewProvider facade",
      "phase": "Phase 3",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts"],
      "dependencies": ["REF-012", "REF-016"],
      "riskLevel": "HIGH",
      "description": "Reduce TaskWebviewProvider to thin coordinator under 300 lines",
      "successMetric": "Provider delegates all work to specialized classes",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts"
    },
    {
      "id": "REF-024",
      "title": "Remove mock data generation features",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/mock/MockDataProvider.ts", "src/mock/sampleData.ts"],
      "dependencies": ["REF-006", "REF-007"],
      "riskLevel": "LOW",
      "description": "Remove mock data generation, keep only essential mocks for tests",
      "successMetric": "Mock directory contains only test fixtures",
      "rollbackStrategy": "git checkout HEAD -- src/mock/"
    },
    {
      "id": "REF-025",
      "title": "Simplify CacheManager to basic TTL cache",
      "phase": "Phase 2",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/services/CacheManager.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Reduce CacheManager to simple Map with TTL",
      "successMetric": "CacheManager under 100 lines, basic caching works",
      "rollbackStrategy": "git checkout HEAD -- src/services/CacheManager.ts"
    },
    {
      "id": "REF-026",
      "title": "Remove ContextManager duplication",
      "phase": "Phase 2",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/server/ContextManager.ts"],
      "dependencies": [],
      "riskLevel": "MEDIUM",
      "description": "Consolidate ContextManager to single implementation",
      "successMetric": "Single ContextManager, no duplicate logic",
      "rollbackStrategy": "git checkout HEAD -- src/server/ContextManager.ts"
    },
    {
      "id": "REF-027",
      "title": "Extract task filtering logic from TaskWebviewProvider",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/services/TaskFilterService.ts"],
      "dependencies": ["REF-003"],
      "riskLevel": "LOW",
      "description": "Move filtering logic to dedicated TaskFilterService",
      "successMetric": "Filtering logic isolated, filters still work",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/services/TaskFilterService.ts"
    },
    {
      "id": "REF-028",
      "title": "Remove package auto-versioning logic",
      "phase": "Phase 2",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["package-extension.js", "scripts/validate-deployment.js"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Simplify packaging to basic vsce package command",
      "successMetric": "Package script under 50 lines, VSIX still builds",
      "rollbackStrategy": "git checkout HEAD -- package-extension.js scripts/"
    },
    {
      "id": "REF-029",
      "title": "Create MCP interface abstraction",
      "phase": "Phase 4",
      "priority": "P2",
      "estimatedMinutes": 20,
      "filesAffected": ["src/client/MCPInterface.ts"],
      "dependencies": ["REF-011"],
      "riskLevel": "LOW",
      "description": "Define clean interface for future MCP implementations",
      "successMetric": "Interface defined with local and remote implementations",
      "rollbackStrategy": "rm src/client/MCPInterface.ts"
    },
    {
      "id": "REF-030",
      "title": "Implement local MCP adapter",
      "phase": "Phase 4",
      "priority": "P2",
      "estimatedMinutes": 20,
      "filesAffected": ["src/client/LocalMCPAdapter.ts", "src/server/SimpleMCPServer.ts"],
      "dependencies": ["REF-029"],
      "riskLevel": "MEDIUM",
      "description": "Create adapter for current local SimpleMCPServer",
      "successMetric": "Local server works through interface",
      "rollbackStrategy": "git checkout HEAD -- src/server/ && rm src/client/LocalMCPAdapter.ts"
    },
    {
      "id": "REF-031",
      "title": "Prepare remote MCP adapter stub",
      "phase": "Phase 4",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/client/RemoteMCPAdapter.ts"],
      "dependencies": ["REF-029"],
      "riskLevel": "LOW",
      "description": "Create stub for future remote MCP connections",
      "successMetric": "Stub compiles, interface satisfied",
      "rollbackStrategy": "rm src/client/RemoteMCPAdapter.ts"
    },
    {
      "id": "REF-032",
      "title": "Remove GitUtilities complexity",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/services/GitUtilities.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Simplify GitUtilities to essential diff operations only",
      "successMetric": "GitUtilities under 100 lines, diff still works",
      "rollbackStrategy": "git checkout HEAD -- src/services/GitUtilities.ts"
    },
    {
      "id": "REF-033",
      "title": "Extract event handling from TaskWebviewProvider",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskEventManager.ts"],
      "dependencies": ["REF-008"],
      "riskLevel": "MEDIUM",
      "description": "Create TaskEventManager for all event subscriptions",
      "successMetric": "Event handling isolated, disposables managed properly",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskEventManager.ts"
    },
    {
      "id": "REF-034",
      "title": "Remove TaskFileWatcher complexity",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/services/TaskFileWatcher.ts"],
      "dependencies": [],
      "riskLevel": "LOW",
      "description": "Simplify file watcher to basic change detection",
      "successMetric": "FileWatcher under 100 lines, still detects changes",
      "rollbackStrategy": "git checkout HEAD -- src/services/TaskFileWatcher.ts"
    },
    {
      "id": "REF-035",
      "title": "Consolidate logging to console only",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/logger.ts"],
      "dependencies": ["REF-014"],
      "riskLevel": "LOW",
      "description": "Replace structured logger with simple console wrapper",
      "successMetric": "Logger under 50 lines, console output works",
      "rollbackStrategy": "git checkout HEAD -- src/utils/logger.ts"
    },
    {
      "id": "REF-036",
      "title": "Remove EncryptionUtil",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/security/EncryptionUtil.ts"],
      "dependencies": ["REF-014"],
      "riskLevel": "LOW",
      "description": "Remove EncryptionUtil as no encryption needed",
      "successMetric": "EncryptionUtil deleted, no references remain",
      "rollbackStrategy": "git checkout HEAD -- src/security/EncryptionUtil.ts"
    },
    {
      "id": "REF-037",
      "title": "Remove auditTrail utility",
      "phase": "Phase 3",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/auditTrail.ts"],
      "dependencies": ["REF-014"],
      "riskLevel": "LOW",
      "description": "Delete auditTrail utility and all references",
      "successMetric": "auditTrail removed, no audit references",
      "rollbackStrategy": "git checkout HEAD -- src/utils/auditTrail.ts"
    },
    {
      "id": "REF-038",
      "title": "Remove TaskStatusManager",
      "phase": "Phase 2",
      "priority": "P1",
      "estimatedMinutes": 15,
      "filesAffected": ["src/services/TaskStatusManager.ts", "src/services/TasksDataService.ts"],
      "dependencies": ["REF-004"],
      "riskLevel": "MEDIUM",
      "description": "Inline status management into TasksDataService",
      "successMetric": "Status management simplified, status updates work",
      "rollbackStrategy": "git checkout HEAD -- src/services/"
    },
    {
      "id": "REF-039",
      "title": "Simplify SimpleMCPServer to basic JSON-RPC",
      "phase": "Phase 2",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/server/SimpleMCPServer.ts"],
      "dependencies": ["REF-026"],
      "riskLevel": "MEDIUM",
      "description": "Remove complex tool registration, keep basic RPC",
      "successMetric": "Server under 300 lines, RPC still works",
      "rollbackStrategy": "git checkout HEAD -- src/server/SimpleMCPServer.ts"
    },
    {
      "id": "REF-040",
      "title": "Extract JavaScript execution from HTML",
      "phase": "Phase 1",
      "priority": "P1",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/webview.js"],
      "dependencies": ["REF-005"],
      "riskLevel": "MEDIUM",
      "description": "Move all inline JavaScript to external file",
      "successMetric": "JavaScript in separate file, interactions still work",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/"
    },
    {
      "id": "REF-041",
      "title": "Remove demo scenarios and test data",
      "phase": "Phase 1",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/demo/demoScenarios.ts", "src/demo/sampleFiles/"],
      "dependencies": ["REF-006", "REF-007"],
      "riskLevel": "LOW",
      "description": "Delete entire demo directory and contents",
      "successMetric": "Demo directory removed, no build errors",
      "rollbackStrategy": "git checkout HEAD -- src/demo/"
    },
    {
      "id": "REF-042",
      "title": "Create TaskWebviewController orchestrator",
      "phase": "Phase 3",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewController.ts", "src/tasks/providers/TaskWebviewProvider.ts"],
      "dependencies": ["REF-023"],
      "riskLevel": "HIGH",
      "description": "Extract orchestration logic to controller pattern",
      "successMetric": "Clean separation between view and controller",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskWebviewController.ts"
    },
    {
      "id": "REF-043",
      "title": "Remove business entity types",
      "phase": "Phase 1",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/types/business.ts"],
      "dependencies": ["REF-006"],
      "riskLevel": "LOW",
      "description": "Remove business.ts with enterprise type definitions",
      "successMetric": "Business types removed, no type errors",
      "rollbackStrategy": "git checkout HEAD -- src/types/business.ts"
    },
    {
      "id": "REF-044",
      "title": "Consolidate extension types",
      "phase": "Phase 1",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/types/extension.ts", "src/types/jsonrpc.ts"],
      "dependencies": ["REF-020"],
      "riskLevel": "LOW",
      "description": "Merge extension and jsonrpc types into single file",
      "successMetric": "Types consolidated, no import errors",
      "rollbackStrategy": "git checkout HEAD -- src/types/"
    },
    {
      "id": "REF-045",
      "title": "Remove portFinder utility",
      "phase": "Phase 2",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/portFinder.ts", "src/server/ProcessManager.ts"],
      "dependencies": ["REF-011"],
      "riskLevel": "LOW",
      "description": "Use fixed port 3000, remove port finding logic",
      "successMetric": "Fixed port used, server starts on 3000",
      "rollbackStrategy": "git checkout HEAD -- src/utils/portFinder.ts src/server/"
    },
    {
      "id": "REF-046",
      "title": "Remove configLoader complexity",
      "phase": "Phase 2",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/configLoader.ts"],
      "dependencies": ["REF-022"],
      "riskLevel": "LOW",
      "description": "Inline simple config loading where needed",
      "successMetric": "Config loader removed, settings still work",
      "rollbackStrategy": "git checkout HEAD -- src/utils/configLoader.ts"
    },
    {
      "id": "REF-047",
      "title": "Create minimal TaskValidator",
      "phase": "Phase 2",
      "priority": "P2",
      "estimatedMinutes": 15,
      "filesAffected": ["src/utils/TaskValidator.ts"],
      "dependencies": ["REF-020"],
      "riskLevel": "LOW",
      "description": "Reduce TaskValidator to essential validation only",
      "successMetric": "Validator under 50 lines, validation works",
      "rollbackStrategy": "git checkout HEAD -- src/utils/TaskValidator.ts"
    },
    {
      "id": "REF-048",
      "title": "Final TaskWebviewProvider reduction",
      "phase": "Phase 3",
      "priority": "P0",
      "estimatedMinutes": 20,
      "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts"],
      "dependencies": ["REF-042"],
      "riskLevel": "HIGH",
      "description": "Verify TaskWebviewProvider is under 300 lines total",
      "successMetric": "File reduced from 2833 to <300 lines",
      "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts"
    }
  ]
}