{
  "refactoring": {
    "tasks": [
      {
        "id": "REF-001",
        "title": "Remove DEMO_MODE flag and conditional code from extension.ts",
        "description": "Remove DEMO_MODE constant and all conditional blocks that check it",
        "details": "Remove DEMO_MODE constant and all conditional blocks that check it. Files: src/extension.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in extension.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/extension.ts",
        "successCriteria": "All DEMO_MODE references removed, extension compiles",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/extension.ts"]
      },
      {
        "id": "REF-002",
        "title": "Remove debugPathConstruction function from extension.ts",
        "description": "Remove the debugPathConstruction function and its invocation",
        "details": "Remove the debugPathConstruction function and its invocation. Files: src/extension.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in extension.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-001"],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/extension.ts",
        "successCriteria": "Function removed, extension still activates properly",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/extension.ts"]
      },
      {
        "id": "REF-003",
        "title": "Extract data fetching logic from TaskWebviewProvider",
        "description": "Move all data fetching methods to TasksDataService",
        "details": "Move all data fetching methods to TasksDataService. Files: src/tasks/providers/TaskWebviewProvider.ts, src/services/TasksDataService.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts src/services/TasksDataService.ts",
        "successCriteria": "TaskWebviewProvider uses only TasksDataService for data",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/services/TasksDataService.ts"
        ]
      },
      {
        "id": "REF-004",
        "title": "Consolidate to JSON-only task parser",
        "description": "Remove MarkdownTaskParser, use only JSONTaskParser",
        "details": "Remove MarkdownTaskParser, use only JSONTaskParser. Files: src/services/JSONTaskParser.ts, src/services/MarkdownTaskParser.ts, src/services/TasksDataService.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in JSONTaskParser.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/services/",
        "successCriteria": "Only JSON parsing works, Markdown parser deleted",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/services/JSONTaskParser.ts",
          "src/services/MarkdownTaskParser.ts",
          "src/services/TasksDataService.ts"
        ]
      },
      {
        "id": "REF-005",
        "title": "Extract HTML generation from TaskWebviewProvider to separate class",
        "description": "Create TaskHTMLGenerator class to handle all HTML generation",
        "details": "Create TaskHTMLGenerator class to handle all HTML generation. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/TaskHTMLGenerator.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-003"],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskHTMLGenerator.ts",
        "successCriteria": "HTML generation isolated in new class",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/TaskHTMLGenerator.ts"
        ]
      },
      {
        "id": "REF-006",
        "title": "Remove demo models directory",
        "description": "Delete entire src/models directory with demo models",
        "details": "Delete entire src/models directory with demo models. Files: src/models/Analytics.ts, src/models/Payment.ts, src/models/User.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in Analytics.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/models/",
        "successCriteria": "Models directory removed, no build errors",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": "2025-09-08T10:15:00.000Z",
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "406d9de9471b390ccef9d7acee28c25aa13931b3",
          "summary": "Removed src/models directory and updated demo file imports to use temporary type definitions",
          "filesChanged": ["src/models/Analytics.ts", "src/models/Payment.ts", "src/models/User.ts", "src/demo/sampleFiles/DashboardAnalytics.ts", "src/demo/sampleFiles/FraudDetection.ts", "src/demo/sampleFiles/PaymentProcessor.ts", "src/demo/sampleFiles/UserService.ts"],
          "completedDate": "2025-09-08T10:15:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/models/Analytics.ts",
          "src/models/Payment.ts",
          "src/models/User.ts"
        ]
      },
      {
        "id": "REF-007",
        "title": "Remove ML inference service",
        "description": "Delete entire src/ml directory with InferenceService",
        "details": "Delete entire src/ml directory with InferenceService. Files: src/ml/InferenceService.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in InferenceService.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/ml/",
        "successCriteria": "ML directory removed, no build errors",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": "2025-09-08T15:20:00.000Z",
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "af193440d94fa49adb2819f88782098d79cbf8bf",
          "summary": "Removed src/ml directory and updated DashboardAnalytics to use inline mock data instead of MLInferenceService",
          "filesChanged": ["src/ml/InferenceService.ts", "src/demo/sampleFiles/DashboardAnalytics.ts", "src/mock/MockDataProvider.ts"],
          "completedDate": "2025-09-08T15:20:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/ml/InferenceService.ts"]
      },
      {
        "id": "REF-008",
        "title": "Extract message handling from TaskWebviewProvider",
        "description": "Create TaskMessageHandler to handle all webview messages",
        "details": "Create TaskMessageHandler to handle all webview messages. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/TaskMessageHandler.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-005"],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskMessageHandler.ts",
        "successCriteria": "Message handling isolated in separate class",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "21710bfaee755e5cd01d555a87b8cd3e585f33d4",
          "summary": "Created TaskMessageHandler class and extracted all webview message handling logic from TaskWebviewProvider",
          "filesChanged": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskMessageHandler.ts"],
          "completedDate": "2025-09-08T16:30:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/TaskMessageHandler.ts"
        ]
      },
      {
        "id": "REF-009",
        "title": "Remove health check logic from ProcessManager",
        "description": "Remove healthCheckInterval and related health monitoring code",
        "details": "Remove healthCheckInterval and related health monitoring code. Files: src/server/ProcessManager.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in ProcessManager.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts",
        "successCriteria": "Health check code removed, server still starts",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "825ae315b6300f933fec49b6abafb9c71d51c53e",
          "summary": "Removed healthCheckInterval property and startHealthMonitoring method from ProcessManager",
          "filesChanged": ["src/server/ProcessManager.ts"],
          "completedDate": "2025-09-08T20:30:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/server/ProcessManager.ts"]
      },
      {
        "id": "REF-010",
        "title": "Remove restart/retry logic from ProcessManager",
        "description": "Remove restartCount, restartTimer, exponential backoff logic",
        "details": "Remove restartCount, restartTimer, exponential backoff logic. Files: src/server/ProcessManager.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in ProcessManager.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-009"],
        "status": "completed",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts",
        "successCriteria": "Restart logic removed, simple start/stop remains",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "1ed02fa9e3126490ccbc60a81363f45ed6c21775",
          "summary": "Removed restartCount, restartTimer, scheduleRestart, and handleServerFailure methods from ProcessManager",
          "filesChanged": ["src/server/ProcessManager.ts", "src/__tests__/unit/processManager.test.ts", "src/__tests__/integration/processManager.test.ts"],
          "completedDate": "2025-09-08T21:30:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/server/ProcessManager.ts"]
      },
      {
        "id": "REF-011",
        "title": "Simplify ProcessManager to direct server control",
        "description": "Reduce ProcessManager to simple start/stop/getStatus methods",
        "details": "Reduce ProcessManager to simple start/stop/getStatus methods. Files: src/server/ProcessManager.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in ProcessManager.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-010"],
        "status": "completed",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/server/ProcessManager.ts",
        "successCriteria": "ProcessManager under 100 lines, basic functionality works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "0212843483683712f8c2dabc45d458c6a89a54df",
          "summary": "Simplified ProcessManager from 387 to 138 lines, removed health checks, restart logic, and complex monitoring. Kept core start/stop/getStatus methods with backward compatibility.",
          "filesChanged": ["src/server/ProcessManager.ts"],
          "completedDate": "2025-01-09T22:30:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/server/ProcessManager.ts"]
      },
      {
        "id": "REF-012",
        "title": "Extract state management from TaskWebviewProvider",
        "description": "Create TaskViewState class to manage webview state",
        "details": "Create TaskViewState class to manage webview state. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/TaskViewState.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-008"],
        "status": "completed",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskViewState.ts",
        "successCriteria": "State management isolated, accordion behavior preserved",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "2af240658dc651ab772b8cd04f1fb78c09780ddd",
          "summary": "Created TaskViewState class and extracted all state management logic from TaskWebviewProvider including accordion state and workspace persistence",
          "filesChanged": ["src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/TaskViewState.ts", "src/__tests__/unit/TaskViewState.test.ts"],
          "completedDate": "2025-09-08T23:00:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/TaskViewState.ts"
        ]
      },
      {
        "id": "REF-013",
        "title": "Remove DegradedModeManager completely",
        "description": "Delete DegradedModeManager and all references to it",
        "details": "Delete DegradedModeManager and all references to it. Files: src/utils/DegradedModeManager.ts, src/extension.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in DegradedModeManager.ts. Verify removed code has no remaining references. Test compilation without removed components. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/utils/DegradedModeManager.ts src/extension.ts",
        "successCriteria": "DegradedModeManager removed, extension still works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "791a57e1818bf3d6a9e5fa6220f1212db9da0f56",
          "summary": "Removed DegradedModeManager class and all references from ContextManager, utils index, and test files",
          "filesChanged": [
            "src/utils/DegradedModeManager.ts",
            "src/server/ContextManager.ts",
            "src/utils/index.ts",
            "src/__tests__/unit/DegradedModeManager.test.ts",
            "src/__tests__/utils/DegradedModeManager.test.ts",
            "src/__tests__/unit/degradedMode.test.ts",
            "src/__tests__/integration/errorRecovery.test.ts"
          ],
          "completedDate": "2025-09-08T10:45:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/utils/DegradedModeManager.ts",
          "src/extension.ts"
        ]
      },
      {
        "id": "REF-014",
        "title": "Remove AuditLogger functionality",
        "description": "Delete AuditLogger and all audit logging calls",
        "details": "Delete AuditLogger and all audit logging calls. Files: src/security/AuditLogger.ts, src/extension.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in AuditLogger.ts. Verify removed code has no remaining references. Test compilation without removed components. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/security/AuditLogger.ts src/extension.ts",
        "successCriteria": "AuditLogger removed, no audit log references remain",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "b640e083a6a753d7a0f308befe4d9130fa753238",
          "summary": "Removed AuditLogger.ts file and replaced all audit logging calls with simple console logging in ErrorHandler, ContextManager, MCPClient, and demo files",
          "filesChanged": [
            "src/security/AuditLogger.ts",
            "src/utils/errorHandler.ts", 
            "src/server/ContextManager.ts",
            "src/client/mcpClient.ts",
            "src/demo/sampleFiles/UserService.ts",
            "src/demo/sampleFiles/PaymentProcessor.ts", 
            "src/demo/sampleFiles/DashboardAnalytics.ts",
            "src/__tests__/unit/auditLogging.test.ts",
            "src/__tests__/utils/ErrorHandler.test.ts",
            "src/__tests__/unit/errorHandling.test.ts",
            "src/__tests__/unit/ErrorHandler.retry.test.ts",
            "src/__tests__/integration/errorRecovery.test.ts"
          ],
          "completedDate": "2025-09-08T23:45:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/security/AuditLogger.ts", "src/extension.ts"]
      },
      {
        "id": "REF-015",
        "title": "Simplify ErrorHandler to basic error logging",
        "description": "Reduce ErrorHandler to simple try-catch wrapper with console logging",
        "details": "Reduce ErrorHandler to simple try-catch wrapper with console logging. Files: src/utils/ErrorHandler.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in ErrorHandler.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-013"],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/ErrorHandler.ts",
        "successCriteria": "ErrorHandler under 50 lines, basic error handling works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "e844834ee5ee8f7753c99a89b0cca39647090e32",
          "summary": "Simplified ErrorHandler from 997 to 87 lines, removed circuit breakers, recovery strategies, retry logic, and audit trail integration. Kept basic error logging to console and compatibility methods.",
          "filesChanged": ["src/utils/errorHandler.ts", "src/utils/index.ts", "src/client/mcpClient.ts", "src/server/ContextManager.ts"],
          "completedDate": "2025-09-08T22:30:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/utils/ErrorHandler.ts"]
      },
      {
        "id": "REF-016",
        "title": "Extract CSS styles from TaskWebviewProvider",
        "description": "Move all inline CSS to external stylesheet",
        "details": "Move all inline CSS to external stylesheet. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/styles.css. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-012"],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/",
        "successCriteria": "CSS in separate file, styles still apply correctly",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "48087f7ffa5c410e6efcbfcbeeef9594d1ae9b26",
          "summary": "Extracted all CSS styles to external styles.css file, updated TaskHTMLGenerator to use external stylesheet with proper VSCode resource URIs",
          "filesChanged": ["src/tasks/providers/TaskHTMLGenerator.ts", "src/tasks/providers/TaskWebviewProvider.ts", "src/tasks/providers/styles.css"],
          "completedDate": "2025-09-08T22:45:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/styles.css"
        ]
      },
      {
        "id": "REF-017",
        "title": "Fix git diff URI construction issue",
        "description": "Fix URI construction for git diff functionality",
        "details": "Fix URI construction for git diff functionality. Files: src/tasks/providers/TaskWebviewProvider.ts, src/extension.ts. Estimated: 20 minutes",
        "testStrategy": "Comprehensive test changes in TaskWebviewProvider.ts. Test the specific issue is resolved. Verify fix does not break existing functionality. Integration test complete workflow. Verify critical paths remain functional. Test rollback procedure if needed.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-008"],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "HIGH",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts src/extension.ts",
        "successCriteria": "Git diff command works when clicking on task files",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "1421f6aef59e7467bdff63d3460ebd2c720905c7",
          "summary": "Fixed URI construction for git diff functionality in TaskMessageHandler and added aidm.openDiff command to extension.ts",
          "filesChanged": ["src/tasks/providers/TaskMessageHandler.ts", "src/extension.ts"],
          "completedDate": "2025-09-08T23:55:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskMessageHandler.ts",
          "src/extension.ts"
        ]
      },
      {
        "id": "REF-018",
        "title": "Remove TimeFormattingUtility",
        "description": "Remove TimeFormattingUtility or inline its functions where needed",
        "details": "Remove TimeFormattingUtility or inline its functions where needed. Files: src/utils/TimeFormattingUtility.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in TimeFormattingUtility.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/TimeFormattingUtility.ts",
        "successCriteria": "Utility removed or simplified to essential functions only",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": "2025-01-08T00:00:00.000Z",
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "9cdb95ad41b9d7373729a15a67d3c2a150136102",
          "summary": "Removed TimeFormattingUtility.ts and inlined time formatting methods in TaskDetailCardProvider",
          "filesChanged": [
            "src/utils/TimeFormattingUtility.ts",
            "src/utils/index.ts", 
            "src/tasks/providers/TaskDetailCardProvider.ts",
            "src/extension.ts",
            "src/types/tasks.ts",
            "src/mock/TimestampGenerator.ts",
            "src/__tests__/utils/TimeFormattingUtility.test.ts"
          ],
          "completedDate": "2025-01-08T00:00:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": ["src/utils/TimeFormattingUtility.ts"]
      },
      {
        "id": "REF-019",
        "title": "Remove manifestValidator utility",
        "description": "Remove manifestValidator or move to build scripts only",
        "details": "Remove manifestValidator or move to build scripts only. Files: src/utils/manifestValidator.ts, scripts/validate-manifest.js. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in manifestValidator.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "completed",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/manifestValidator.ts",
        "successCriteria": "Validator removed from runtime code",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "32e08edaf6e2a0cdf88b1bf1361dc19ab4df69b0",
          "summary": "Removed manifestValidator.ts from runtime utils, kept build script, removed exports and test file",
          "filesChanged": ["src/utils/manifestValidator.ts", "src/utils/index.ts", "src/__tests__/unit/manifest.test.ts"],
          "completedDate": "2025-01-09T00:00:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/utils/manifestValidator.ts",
          "scripts/validate-manifest.js"
        ]
      },
      {
        "id": "REF-020",
        "title": "Consolidate task types into single file",
        "description": "Merge all task type definitions into single taskTypes.ts",
        "details": "Merge all task type definitions into single taskTypes.ts. Files: src/tasks/types/taskInterfaces.ts, src/tasks/types/taskTypes.ts, src/tasks/types/taskJsonRpc.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in taskInterfaces.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-004"],
        "status": "completed",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/types/",
        "successCriteria": "Single source of truth for task types",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": {
          "commitHash": "pending - will be updated after commit",
          "summary": "Consolidated all task type definitions from taskInterfaces.ts and taskJsonRpc.ts into single taskTypes.ts file",
          "filesChanged": ["src/tasks/types/taskTypes.ts", "src/tasks/types/index.ts", "src/tasks/types/taskInterfaces.ts", "src/tasks/types/taskJsonRpc.ts"],
          "completedDate": "2025-01-09T00:00:00.000Z",
          "diffAvailable": true
        },
        "testResults": null,
        "filesAffected": [
          "src/tasks/types/taskInterfaces.ts",
          "src/tasks/types/taskTypes.ts",
          "src/tasks/types/taskJsonRpc.ts"
        ]
      },
      {
        "id": "REF-021",
        "title": "Remove excessive command registrations",
        "description": "Keep only essential commands: showTasks, refreshTasks, openDiff",
        "details": "Keep only essential commands: showTasks, refreshTasks, openDiff. Files: src/extension.ts, package.json. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in extension.ts. Verify removed code has no remaining references. Test compilation without removed components. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-002"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/extension.ts package.json",
        "successCriteria": "Command count reduced by 70%, core functions work",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/extension.ts", "package.json"]
      },
      {
        "id": "REF-022",
        "title": "Simplify configuration settings",
        "description": "Remove non-essential configuration options",
        "details": "Remove non-essential configuration options. Files: package.json, src/config/extensionConfig.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in package.json. Test simplified implementation maintains functionality. Verify performance is not degraded. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-021"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- package.json src/config/",
        "successCriteria": "Config reduced to taskFile path and server port only",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["package.json", "src/config/extensionConfig.ts"]
      },
      {
        "id": "REF-023",
        "title": "Create thin TaskWebviewProvider facade",
        "description": "Reduce TaskWebviewProvider to thin coordinator under 300 lines",
        "details": "Reduce TaskWebviewProvider to thin coordinator under 300 lines. Files: src/tasks/providers/TaskWebviewProvider.ts. Estimated: 20 minutes",
        "testStrategy": "Comprehensive test changes in TaskWebviewProvider.ts. Integration test complete workflow. Verify critical paths remain functional. Test rollback procedure if needed.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-012", "REF-016"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "HIGH",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts",
        "successCriteria": "Provider delegates all work to specialized classes",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts"]
      },
      {
        "id": "REF-024",
        "title": "Remove mock data generation features",
        "description": "Remove mock data generation, keep only essential mocks for tests",
        "details": "Remove mock data generation, keep only essential mocks for tests. Files: src/mock/MockDataProvider.ts, src/mock/sampleData.ts. Estimated: 20 minutes",
        "testStrategy": "Unit test changes in MockDataProvider.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-006", "REF-007"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/mock/",
        "successCriteria": "Mock directory contains only test fixtures",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/mock/MockDataProvider.ts",
          "src/mock/sampleData.ts"
        ]
      },
      {
        "id": "REF-025",
        "title": "Simplify CacheManager to basic TTL cache",
        "description": "Reduce CacheManager to simple Map with TTL",
        "details": "Reduce CacheManager to simple Map with TTL. Files: src/services/CacheManager.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in CacheManager.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/services/CacheManager.ts",
        "successCriteria": "CacheManager under 100 lines, basic caching works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/services/CacheManager.ts"]
      },
      {
        "id": "REF-026",
        "title": "Remove ContextManager duplication",
        "description": "Consolidate ContextManager to single implementation",
        "details": "Consolidate ContextManager to single implementation. Files: src/server/ContextManager.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in ContextManager.ts. Verify removed code has no remaining references. Test compilation without removed components. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/server/ContextManager.ts",
        "successCriteria": "Single ContextManager, no duplicate logic",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/server/ContextManager.ts"]
      },
      {
        "id": "REF-027",
        "title": "Extract task filtering logic from TaskWebviewProvider",
        "description": "Move filtering logic to dedicated TaskFilterService",
        "details": "Move filtering logic to dedicated TaskFilterService. Files: src/tasks/providers/TaskWebviewProvider.ts, src/services/TaskFilterService.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-003"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/services/TaskFilterService.ts",
        "successCriteria": "Filtering logic isolated, filters still work",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/services/TaskFilterService.ts"
        ]
      },
      {
        "id": "REF-028",
        "title": "Remove package auto-versioning logic",
        "description": "Simplify packaging to basic vsce package command",
        "details": "Simplify packaging to basic vsce package command. Files: package-extension.js, scripts/validate-deployment.js. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in package-extension.js. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- package-extension.js scripts/",
        "successCriteria": "Package script under 50 lines, VSIX still builds",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "package-extension.js",
          "scripts/validate-deployment.js"
        ]
      },
      {
        "id": "REF-029",
        "title": "Create MCP interface abstraction",
        "description": "Define clean interface for future MCP implementations",
        "details": "Define clean interface for future MCP implementations. Files: src/client/MCPInterface.ts. Estimated: 20 minutes",
        "testStrategy": "Unit test changes in MCPInterface.ts. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-011"],
        "status": "not_started",
        "phase": "Phase 4",
        "riskLevel": "LOW",
        "estimatedMinutes": 20,
        "rollbackStrategy": "rm src/client/MCPInterface.ts",
        "successCriteria": "Interface defined with local and remote implementations",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/client/MCPInterface.ts"]
      },
      {
        "id": "REF-030",
        "title": "Implement local MCP adapter",
        "description": "Create adapter for current local SimpleMCPServer",
        "details": "Create adapter for current local SimpleMCPServer. Files: src/client/LocalMCPAdapter.ts, src/server/SimpleMCPServer.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in LocalMCPAdapter.ts. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-029"],
        "status": "not_started",
        "phase": "Phase 4",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/server/ && rm src/client/LocalMCPAdapter.ts",
        "successCriteria": "Local server works through interface",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/client/LocalMCPAdapter.ts",
          "src/server/SimpleMCPServer.ts"
        ]
      },
      {
        "id": "REF-031",
        "title": "Prepare remote MCP adapter stub",
        "description": "Create stub for future remote MCP connections",
        "details": "Create stub for future remote MCP connections. Files: src/client/RemoteMCPAdapter.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in RemoteMCPAdapter.ts. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-029"],
        "status": "not_started",
        "phase": "Phase 4",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "rm src/client/RemoteMCPAdapter.ts",
        "successCriteria": "Stub compiles, interface satisfied",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/client/RemoteMCPAdapter.ts"]
      },
      {
        "id": "REF-032",
        "title": "Remove GitUtilities complexity",
        "description": "Simplify GitUtilities to essential diff operations only",
        "details": "Simplify GitUtilities to essential diff operations only. Files: src/services/GitUtilities.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in GitUtilities.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/services/GitUtilities.ts",
        "successCriteria": "GitUtilities under 100 lines, diff still works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/services/GitUtilities.ts"]
      },
      {
        "id": "REF-033",
        "title": "Extract event handling from TaskWebviewProvider",
        "description": "Create TaskEventManager for all event subscriptions",
        "details": "Create TaskEventManager for all event subscriptions. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/TaskEventManager.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-008"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskEventManager.ts",
        "successCriteria": "Event handling isolated, disposables managed properly",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/TaskEventManager.ts"
        ]
      },
      {
        "id": "REF-034",
        "title": "Remove TaskFileWatcher complexity",
        "description": "Simplify file watcher to basic change detection",
        "details": "Simplify file watcher to basic change detection. Files: src/services/TaskFileWatcher.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in TaskFileWatcher.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": [],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/services/TaskFileWatcher.ts",
        "successCriteria": "FileWatcher under 100 lines, still detects changes",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/services/TaskFileWatcher.ts"]
      },
      {
        "id": "REF-035",
        "title": "Consolidate logging to console only",
        "description": "Replace structured logger with simple console wrapper",
        "details": "Replace structured logger with simple console wrapper. Files: src/utils/logger.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in logger.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-014"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/logger.ts",
        "successCriteria": "Logger under 50 lines, console output works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/utils/logger.ts"]
      },
      {
        "id": "REF-036",
        "title": "Remove EncryptionUtil",
        "description": "Remove EncryptionUtil as no encryption needed",
        "details": "Remove EncryptionUtil as no encryption needed. Files: src/security/EncryptionUtil.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in EncryptionUtil.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-014"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/security/EncryptionUtil.ts",
        "successCriteria": "EncryptionUtil deleted, no references remain",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/security/EncryptionUtil.ts"]
      },
      {
        "id": "REF-037",
        "title": "Remove auditTrail utility",
        "description": "Delete auditTrail utility and all references",
        "details": "Delete auditTrail utility and all references. Files: src/utils/auditTrail.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in auditTrail.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-014"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/auditTrail.ts",
        "successCriteria": "auditTrail removed, no audit references",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/utils/auditTrail.ts"]
      },
      {
        "id": "REF-038",
        "title": "Remove TaskStatusManager",
        "description": "Inline status management into TasksDataService",
        "details": "Inline status management into TasksDataService. Files: src/services/TaskStatusManager.ts, src/services/TasksDataService.ts. Estimated: 15 minutes",
        "testStrategy": "Unit and integration test changes in TaskStatusManager.ts. Verify removed code has no remaining references. Test compilation without removed components. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-004"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/services/",
        "successCriteria": "Status management simplified, status updates work",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/services/TaskStatusManager.ts",
          "src/services/TasksDataService.ts"
        ]
      },
      {
        "id": "REF-039",
        "title": "Simplify SimpleMCPServer to basic JSON-RPC",
        "description": "Remove complex tool registration, keep basic RPC",
        "details": "Remove complex tool registration, keep basic RPC. Files: src/server/SimpleMCPServer.ts. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in SimpleMCPServer.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-026"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/server/SimpleMCPServer.ts",
        "successCriteria": "Server under 300 lines, RPC still works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/server/SimpleMCPServer.ts"]
      },
      {
        "id": "REF-040",
        "title": "Extract JavaScript execution from HTML",
        "description": "Move all inline JavaScript to external file",
        "details": "Move all inline JavaScript to external file. Files: src/tasks/providers/TaskWebviewProvider.ts, src/tasks/providers/webview.js. Estimated: 20 minutes",
        "testStrategy": "Unit and integration test changes in TaskWebviewProvider.ts. Test extracted component works independently. Verify original component delegates correctly. Test affected components still interact correctly. Verify no regression in dependent modules.",
        "priority": "high",
        "assignee": "unassigned",
        "dependencies": ["REF-005"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "MEDIUM",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/",
        "successCriteria": "JavaScript in separate file, interactions still work",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewProvider.ts",
          "src/tasks/providers/webview.js"
        ]
      },
      {
        "id": "REF-041",
        "title": "Remove demo scenarios and test data",
        "description": "Delete entire demo directory and contents",
        "details": "Delete entire demo directory and contents. Files: src/demo/demoScenarios.ts, src/demo/sampleFiles/. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in demoScenarios.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-006", "REF-007"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/demo/",
        "successCriteria": "Demo directory removed, no build errors",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/demo/demoScenarios.ts", "src/demo/sampleFiles/"]
      },
      {
        "id": "REF-042",
        "title": "Create TaskWebviewController orchestrator",
        "description": "Extract orchestration logic to controller pattern",
        "details": "Extract orchestration logic to controller pattern. Files: src/tasks/providers/TaskWebviewController.ts, src/tasks/providers/TaskWebviewProvider.ts. Estimated: 20 minutes",
        "testStrategy": "Comprehensive test changes in TaskWebviewController.ts. Integration test complete workflow. Verify critical paths remain functional. Test rollback procedure if needed.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-023"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "HIGH",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/ && rm src/tasks/providers/TaskWebviewController.ts",
        "successCriteria": "Clean separation between view and controller",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/tasks/providers/TaskWebviewController.ts",
          "src/tasks/providers/TaskWebviewProvider.ts"
        ]
      },
      {
        "id": "REF-043",
        "title": "Remove business entity types",
        "description": "Remove business.ts with enterprise type definitions",
        "details": "Remove business.ts with enterprise type definitions. Files: src/types/business.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in business.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-006"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/types/business.ts",
        "successCriteria": "Business types removed, no type errors",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/types/business.ts"]
      },
      {
        "id": "REF-044",
        "title": "Consolidate extension types",
        "description": "Merge extension and jsonrpc types into single file",
        "details": "Merge extension and jsonrpc types into single file. Files: src/types/extension.ts, src/types/jsonrpc.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in extension.ts. Test simplified implementation maintains functionality. Verify performance is not degraded. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-020"],
        "status": "not_started",
        "phase": "Phase 1",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/types/",
        "successCriteria": "Types consolidated, no import errors",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/types/extension.ts", "src/types/jsonrpc.ts"]
      },
      {
        "id": "REF-045",
        "title": "Remove portFinder utility",
        "description": "Use fixed port 3000, remove port finding logic",
        "details": "Use fixed port 3000, remove port finding logic. Files: src/utils/portFinder.ts, src/server/ProcessManager.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in portFinder.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-011"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/portFinder.ts src/server/",
        "successCriteria": "Fixed port used, server starts on 3000",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": [
          "src/utils/portFinder.ts",
          "src/server/ProcessManager.ts"
        ]
      },
      {
        "id": "REF-046",
        "title": "Remove configLoader complexity",
        "description": "Inline simple config loading where needed",
        "details": "Inline simple config loading where needed. Files: src/utils/configLoader.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in configLoader.ts. Verify removed code has no remaining references. Test compilation without removed components. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-022"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/configLoader.ts",
        "successCriteria": "Config loader removed, settings still work",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/utils/configLoader.ts"]
      },
      {
        "id": "REF-047",
        "title": "Create minimal TaskValidator",
        "description": "Reduce TaskValidator to essential validation only",
        "details": "Reduce TaskValidator to essential validation only. Files: src/utils/TaskValidator.ts. Estimated: 15 minutes",
        "testStrategy": "Unit test changes in TaskValidator.ts. Verify compilation succeeds. Test basic functionality remains intact.",
        "priority": "medium",
        "assignee": "unassigned",
        "dependencies": ["REF-020"],
        "status": "not_started",
        "phase": "Phase 2",
        "riskLevel": "LOW",
        "estimatedMinutes": 15,
        "rollbackStrategy": "git checkout HEAD -- src/utils/TaskValidator.ts",
        "successCriteria": "Validator under 50 lines, validation works",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/utils/TaskValidator.ts"]
      },
      {
        "id": "REF-048",
        "title": "Final TaskWebviewProvider reduction",
        "description": "Verify TaskWebviewProvider is under 300 lines total",
        "details": "Verify TaskWebviewProvider is under 300 lines total. Files: src/tasks/providers/TaskWebviewProvider.ts. Estimated: 20 minutes",
        "testStrategy": "Comprehensive test changes in TaskWebviewProvider.ts. Integration test complete workflow. Verify critical paths remain functional. Test rollback procedure if needed.",
        "priority": "critical",
        "assignee": "unassigned",
        "dependencies": ["REF-042"],
        "status": "not_started",
        "phase": "Phase 3",
        "riskLevel": "HIGH",
        "estimatedMinutes": 20,
        "rollbackStrategy": "git checkout HEAD -- src/tasks/providers/TaskWebviewProvider.ts",
        "successCriteria": "File reduced from 2833 to <300 lines",
        "subtasks": [],
        "testStatus": {
          "lastRunDate": null,
          "totalTests": 0,
          "passedTests": 0,
          "failedTests": 0,
          "executionTime": 0,
          "failingTestsList": []
        },
        "implementation": null,
        "testResults": null,
        "filesAffected": ["src/tasks/providers/TaskWebviewProvider.ts"]
      }
    ],
    "metadata": {
      "created": "2025-09-08T01:14:51.881Z",
      "updated": "2025-09-08T01:14:51.884Z",
      "description": "Refactoring tasks for AiDM VSCode Extension - converted from flat structure",
      "projectName": "AiDM VSCode Extension Refactoring",
      "totalTasks": 48,
      "completedTasks": 0,
      "remainingTasks": 48,
      "phases": ["Phase 1", "Phase 2", "Phase 3", "Phase 4"],
      "originalMetadata": {
        "created": "2025-01-09",
        "totalTasks": 48,
        "estimatedHours": 14.5,
        "phases": ["Phase 1", "Phase 2", "Phase 3", "Phase 4"]
      }
    }
  }
}
