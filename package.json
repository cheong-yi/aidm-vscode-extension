{
  "name": "enterprise-ai-context",
  "displayName": "Enterprise AI Context",
  "description": "Bridge business requirements and code implementation with AI-powered context for enterprise development",
  "version": "0.1.0",
  "publisher": "enterprise-ai-context",
  "author": {
    "name": "Enterprise AI Context Team"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/enterprise-ai-context/vscode-extension"
  },
  "bugs": {
    "url": "https://github.com/enterprise-ai-context/vscode-extension/issues"
  },
  "homepage": "https://github.com/enterprise-ai-context/vscode-extension#readme",
  "keywords": [
    "enterprise",
    "ai",
    "context",
    "business-requirements",
    "mcp",
    "model-context-protocol",
    "typescript",
    "hover",
    "documentation"
  ],
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=20.0.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Snippets"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onCommand:enterprise-ai-context.showStatus",
    "onCommand:enterprise-ai-context.runRooCodeDemo"
  ],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "enterprise-ai-context.showStatus",
        "title": "Show Connection Status",
        "category": "Enterprise AI Context"
      },
      {
        "command": "enterprise-ai-context.restartServer",
        "title": "Restart MCP Server",
        "category": "Enterprise AI Context"
      },
      {
        "command": "enterprise-ai-context.runRooCodeDemo",
        "title": "Run RooCode Integration Demo",
        "category": "Enterprise AI Context"
      },
      {
        "command": "enterprise-ai-context.connectRemoteMCP",
        "title": "Connect to Remote MCP Server",
        "category": "Enterprise AI Context"
      },
      {
        "command": "enterprise-ai-context.showDemoPanel",
        "title": "Show Demo Panel",
        "category": "Enterprise AI Context"
      }
    ],
    "configuration": {
      "title": "Enterprise AI Context",
      "properties": {
        "enterpriseAiContext.mcpServer.port": {
          "type": "number",
          "default": 3000,
          "description": "Port for MCP server"
        },
        "enterpriseAiContext.mcpServer.timeout": {
          "type": "number",
          "default": 5000,
          "description": "Request timeout in milliseconds"
        },
        "enterpriseAiContext.mcpServer.retryAttempts": {
          "type": "number",
          "default": 3,
          "description": "Number of restart attempts on server failure"
        },
        "enterpriseAiContext.performance.maxConcurrentRequests": {
          "type": "number",
          "default": 10,
          "description": "Maximum concurrent requests to MCP server"
        },
        "enterpriseAiContext.mock.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable mock data mode"
        },
        "enterpriseAiContext.mock.dataSize": {
          "type": "string",
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "default": "medium",
          "description": "Size of mock data set"
        },
        "enterpriseAiContext.mock.enterprisePatterns": {
          "type": "boolean",
          "default": true,
          "description": "Use realistic enterprise patterns in mock data"
        },
        "enterpriseAiContext.demo.scenarioComplexity": {
          "type": "string",
          "enum": [
            "basic",
            "intermediate",
            "advanced"
          ],
          "default": "intermediate",
          "description": "Complexity level of demo scenarios"
        },
        "enterpriseAiContext.demo.includeComplianceData": {
          "type": "boolean",
          "default": true,
          "description": "Include compliance and regulatory data in demos"
        },
        "enterpriseAiContext.demo.industryVertical": {
          "type": "string",
          "enum": [
            "financial-services",
            "healthcare",
            "retail",
            "manufacturing",
            "technology",
            "generic"
          ],
          "default": "financial-services",
          "description": "Industry vertical for specialized demo data"
        },
        "enterpriseAiContext.ui.hoverPopupTheme": {
          "type": "string",
          "enum": [
            "default",
            "compact",
            "detailed"
          ],
          "default": "detailed",
          "description": "Hover popup display theme"
        },
        "enterpriseAiContext.ui.showProgressBars": {
          "type": "boolean",
          "default": true,
          "description": "Show progress bars in hover popups"
        },
        "enterpriseAiContext.ui.maxRequirementsShown": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum number of requirements to show in hover popup"
        },
        "enterpriseAiContext.remote.mcpServerUrl": {
          "type": "string",
          "default": "",
          "description": "URL of remote MCP server (e.g., https://your-roocode-server.com)"
        },
        "enterpriseAiContext.remote.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable remote MCP server connection"
        },
        "enterpriseAiContext.remote.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for remote MCP server authentication"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run lint",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "jest",
    "test:ci": "jest --coverage --passWithNoTests --silent --testPathIgnorePatterns=errorHandler.test.ts,errorRecovery.test.ts,demoScenarios.e2e.test.ts,userWorkflows.e2e.test.ts,extension.test.ts,MockDataProvider.test.ts,rooCodeHybridIntegration.test.ts,SimpleMCPServer.integration.test.ts,MCPTools.integration.test.ts,processManager.test.ts,rooCodeIntegration.test.ts,errorHandlingIntegration.test.ts,auditLogging.test.ts,degradedMode.test.ts,ContextManager.test.ts,errorHandling.test.ts",
    "test:watch": "jest --watch",
    "demo": "npm run compile && node out/demo/runDemo.js",
    "demo:verbose": "npm run compile && node out/demo/runDemo.js --verbose",
    "demo:scenarios": "npm run compile && node out/demo/runDemo.js --scenarios",
    "test:integration": "jest --testPathPattern=integration",
    "test:roocode": "jest --testPathPattern=rooCodeIntegration",
    "package": "vsce package",
    "publish": "vsce publish",
    "validate": "npm run compile && npm run lint && npm run test:ci",
    "validate:deployment": "node scripts/validate-deployment.js",
    "clean": "rimraf out coverage && del /q *.vsix 2>nul || echo No .vsix files to delete",
    "prebuild": "npm run clean",
    "build": "npm run validate && npm run package",
    "prepackage": "npm run validate:deployment"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "20.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^8.47.0",
    "jest": "^29.5.0",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "axios": "^1.5.0"
  }
}
