{
  "name": "aidm-vscode-extension",
  "displayName": "AiDM VSCode Extension",
  "description": "Bridge business requirements and code implementation with AI-powered context for enterprise development",
  "version": "0.59.1",
  "_versionNotes": "Auto-packaged version 0.59.1 - 2025-08-26",
  "publisher": "aidm-team",
  "author": {
    "name": "AiDM Team"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/aidm-team/vscode-extension"
  },
  "bugs": {
    "url": "https://github.com/aidm-team/vscode-extension/issues"
  },
  "homepage": "https://github.com/aidm-team/vscode-extension#readme",
  "keywords": [
    "enterprise",
    "ai",
    "context",
    "business-requirements",
    "mcp",
    "model-context-protocol",
    "typescript",
    "hover",
    "documentation"
  ],
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=20.0.0"
  },
  "capabilities": {
    "virtualWorkspaces": {
      "supported": "limited",
      "description": "Task management features work with virtual workspaces. File watching and some file operations may have limited functionality in virtual environments."
    }
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Snippets"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onCommand:aidm-vscode-extension.showStatus",
    "onCommand:aidm-vscode-extension.runRooCodeDemo",
    "onCommand:aidm-vscode-extension.restartServer",
    "onCommand:aidm-vscode-extension.connectRemoteMCP",
    "onCommand:aidm-vscode-extension.showDemoPanel",
    "onCommand:aidm-vscode-extension.testActivation",
    "onCommand:aidm-vscode-extension.openConfiguration",
    "onCommand:aidm-vscode-extension.hello",
    "onCommand:aidm-vscode-extension.seedHoverContext",
    "onCommand:aidm-vscode-extension.forceTest",
    "onCommand:aidm-vscode-extension.startup",
    "onCommand:aidm-vscode-extension.debug",
    "onCommand:aidm-vscode-extension.version",
    "onStartupFinished"
  ],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aidm-vscode-extension.showStatus",
        "title": "Show Connection Status",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.restartServer",
        "title": "Restart MCP Server",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.showPort",
        "title": "Show MCP Server Port",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.runRooCodeDemo",
        "title": "Run RooCode Integration Demo",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.connectRemoteMCP",
        "title": "Connect to Remote MCP Server",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.showDemoPanel",
        "title": "Show Demo Panel",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.openConfiguration",
        "title": "Open Configuration Panel",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.seedHoverContext",
        "title": "Seed Hover Context for Selection",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.version",
        "title": "Show Extension Version",
        "category": "AiDM"
      },
      {
        "command": "aidm-vscode-extension.refreshTasks",
        "title": "Refresh Tasks",
        "category": "Taskmaster",
        "icon": "$(refresh)"
      },
      {
        "command": "aidm-vscode-extension.updateTaskStatus",
        "title": "Update Task Status",
        "category": "Taskmaster",
        "icon": "$(edit)"
      },
      {
        "command": "aidm-vscode-extension.executeTaskWithCursor",
        "title": "Execute Task with Cursor",
        "category": "Taskmaster",
        "icon": "$(robot)",
        "when": "view == aidm-vscode-extension.tasks-list && viewItem == executable-task"
      },
      {
        "command": "aidm-vscode-extension.generateTaskPrompt",
        "title": "Generate Task Prompt",
        "category": "Taskmaster",
        "icon": "$(code)"
      },
      {
        "command": "aidm-vscode-extension.viewTestResults",
        "title": "View Test Results",
        "category": "Taskmaster",
        "icon": "$(beaker)"
      }
    ],
    "configuration": {
      "title": "AiDM VSCode Extension",
      "properties": {
        "aidmVscodeExtension.mcpServer.port": {
          "type": "number",
          "default": 3001,
          "description": "Port for MCP server (default: 3001 to avoid conflicts with Cursor)"
        },
        "aidmVscodeExtension.mcpServer.timeout": {
          "type": "number",
          "default": 5000,
          "description": "Request timeout in milliseconds"
        },
        "aidmVscodeExtension.mcpServer.retryAttempts": {
          "type": "number",
          "default": 3,
          "description": "Number of restart attempts on server failure"
        },
        "aidmVscodeExtension.performance.maxConcurrentRequests": {
          "type": "number",
          "default": 10,
          "description": "Maximum concurrent requests to MCP server"
        },
        "aidmVscodeExtension.mock.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable mock data mode"
        },
        "aidmVscodeExtension.mock.dataSize": {
          "type": "string",
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "default": "medium",
          "description": "Size of mock data set"
        },
        "aidmVscodeExtension.mock.enterprisePatterns": {
          "type": "boolean",
          "default": true,
          "description": "Use realistic enterprise patterns in mock data"
        },
        "aidmVscodeExtension.demo.scenarioComplexity": {
          "type": "string",
          "enum": [
            "basic",
            "intermediate",
            "advanced"
          ],
          "default": "intermediate",
          "description": "Complexity level of demo scenarios"
        },
        "aidmVscodeExtension.demo.includeComplianceData": {
          "type": "boolean",
          "default": true,
          "description": "Include compliance and regulatory data in demos"
        },
        "aidmVscodeExtension.demo.industryVertical": {
          "type": "string",
          "enum": [
            "financial-services",
            "healthcare",
            "retail",
            "manufacturing",
            "technology",
            "generic"
          ],
          "default": "financial-services",
          "description": "Industry vertical for specialized demo data"
        },
        "aidmVscodeExtension.ui.hoverPopupTheme": {
          "type": "string",
          "enum": [
            "default",
            "compact",
            "detailed"
          ],
          "default": "detailed",
          "description": "Hover popup display theme"
        },
        "aidmVscodeExtension.ui.showProgressBars": {
          "type": "boolean",
          "default": true,
          "description": "Show progress bars in hover popups"
        },
        "aidmVscodeExtension.ui.maxRequirementsShown": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum number of requirements to show in hover popup"
        },
        "aidmVscodeExtension.remote.mcpServerUrl": {
          "type": "string",
          "default": "",
          "description": "URL of remote MCP server (e.g., https://your-roocode-server.com)"
        },
        "aidmVscodeExtension.remote.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable remote MCP server connection"
        },
        "aidmVscodeExtension.remote.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for remote MCP server authentication"
        },
        "aidmVscodeExtension.tasks.filePath": {
          "type": "string",
          "default": "tasks.json",
          "description": "Path to tasks.json file relative to workspace root. Can be a filename (tasks.json) or relative path (config/tasks.json).",
          "pattern": "^[^<>:\"|?*\\x00-\\x1f]*\\.(json|JSON)$",
          "patternErrorMessage": "Must be a valid file path ending with .json (e.g., 'tasks.json' or 'config/tasks.json')",
          "examples": [
            "tasks.json",
            "config/tasks.json",
            ".taskmaster/tasks.json",
            "project-tasks.json"
          ]
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "taskmaster",
          "title": "Taskmaster",
          "icon": "$(checklist)"
        }
      ]
    },
    "views": {
      "taskmaster": [
        {
          "id": "aidm-vscode-extension.tasks-list",
          "name": "Tasks",
          "type": "webview",
          "when": "workspaceFolderCount > 0"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "aidm-vscode-extension.executeTaskWithCursor",
          "when": "view == aidm-vscode-extension.tasks-list && viewItem == executable-task",
          "group": "taskmaster@1"
        },
        {
          "command": "aidm-vscode-extension.updateTaskStatus",
          "when": "view == aidm-vscode-extension.tasks-list",
          "group": "taskmaster@2"
        },
        {
          "command": "aidm-vscode-extension.generateTaskPrompt",
          "when": "view == aidm-vscode-extension.tasks-list && viewItem == executable-task",
          "group": "taskmaster@1"
        },
        {
          "command": "aidm-vscode-extension.viewTestResults",
          "when": "view == aidm-vscode-extension.tasks-list && viewItem =~ /.*-with-tests$/",
          "group": "taskmaster@3"
        }
      ],
      "view/title": [
        {
          "command": "aidm-vscode-extension.refreshTasks",
          "when": "view == aidm-vscode-extension.tasks-list",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "compile": "webpack",
    "watch": "webpack --watch",
    "test": "jest",
    "lint": "eslint src --ext ts",
    "package": "node package-extension.js",
    "compile-tsc": "tsc -p ./",
    "pretest": "npm run compile && npm run lint",
    "validate-manifest": "node scripts/validate-manifest.js",
    "test:packaging": "node scripts/test-packaging.js"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "20.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^8.47.0",
    "jest": "^29.5.0",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.1.6",
    "webpack": "^5.101.3",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "axios": "^1.11.0"
  }
}
