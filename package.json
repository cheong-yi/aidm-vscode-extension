{
  "name": "enterprise-ai-context",
  "displayName": "Enterprise AI Context",
  "description": "Bridge business requirements and code implementation",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:typescript"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "enterprise-ai-context.showStatus",
        "title": "Show Connection Status"
      },
      {
        "command": "enterprise-ai-context.restartServer",
        "title": "Restart MCP Server"
      }
    ],
    "configuration": {
      "title": "Enterprise AI Context",
      "properties": {
        "enterpriseAiContext.mcpServer.port": {
          "type": "number",
          "default": 3000,
          "description": "Port for MCP server"
        },
        "enterpriseAiContext.mcpServer.timeout": {
          "type": "number",
          "default": 5000,
          "description": "Request timeout in milliseconds"
        },
        "enterpriseAiContext.mcpServer.retryAttempts": {
          "type": "number",
          "default": 3,
          "description": "Number of restart attempts on server failure"
        },
        "enterpriseAiContext.performance.maxConcurrentRequests": {
          "type": "number",
          "default": 10,
          "description": "Maximum concurrent requests to MCP server"
        },
        "enterpriseAiContext.mock.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable mock data mode"
        },
        "enterpriseAiContext.mock.dataSize": {
          "type": "string",
          "enum": [
            "small",
            "medium",
            "large"
          ],
          "default": "medium",
          "description": "Size of mock data set"
        },
        "enterpriseAiContext.mock.enterprisePatterns": {
          "type": "boolean",
          "default": true,
          "description": "Use realistic enterprise patterns in mock data"
        },
        "enterpriseAiContext.demo.scenarioComplexity": {
          "type": "string",
          "enum": [
            "basic",
            "intermediate",
            "advanced"
          ],
          "default": "intermediate",
          "description": "Complexity level of demo scenarios"
        },
        "enterpriseAiContext.demo.includeComplianceData": {
          "type": "boolean",
          "default": true,
          "description": "Include compliance and regulatory data in demos"
        },
        "enterpriseAiContext.demo.industryVertical": {
          "type": "string",
          "enum": [
            "financial-services",
            "healthcare",
            "retail",
            "manufacturing",
            "technology",
            "generic"
          ],
          "default": "financial-services",
          "description": "Industry vertical for specialized demo data"
        },
        "enterpriseAiContext.ui.hoverPopupTheme": {
          "type": "string",
          "enum": [
            "default",
            "compact",
            "detailed"
          ],
          "default": "detailed",
          "description": "Hover popup display theme"
        },
        "enterpriseAiContext.ui.showProgressBars": {
          "type": "boolean",
          "default": true,
          "description": "Show progress bars in hover popups"
        },
        "enterpriseAiContext.ui.maxRequirementsShown": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum number of requirements to show in hover popup"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "demo": "npm run compile && node out/demo/runDemo.js",
    "demo:verbose": "npm run compile && node out/demo/runDemo.js --verbose",
    "demo:scenarios": "npm run compile && node out/demo/runDemo.js --scenarios",
    "test:integration": "jest --testPathPattern=integration",
    "test:roocode": "jest --testPathPattern=rooCodeIntegration"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "16.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "eslint": "^8.47.0",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "axios": "^1.5.0"
  }
}
